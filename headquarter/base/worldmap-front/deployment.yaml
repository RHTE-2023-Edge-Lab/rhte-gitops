apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: "false"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"worldmap-front:latest","namespace":"headquarter"},"fieldPath":"spec.template.spec.containers[?(@.name==\"worldmap-front\")].image","pause":"false"}]'
  labels:
    app: worldmap-front
    app.kubernetes.io/component: worldmap-front
    app.kubernetes.io/instance: worldmap-front
    app.kubernetes.io/name: worldmap-front
    app.kubernetes.io/part-of: worldmap-front
    app.openshift.io/runtime: quarkus
    app.openshift.io/runtime-namespace: headquarter
  name: worldmap-front
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: worldmap-front
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: worldmap-front
        deployment: worldmap-front
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/headquarter/worldmap-front:latest
        imagePullPolicy: Always
        name: worldmap-front
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: headquarter-kafka-bootstrap:9092
        - name: MP_MESSAGING_CONNECTOR_SMALLRYE_KAFKA_SECURITY_PROTOCOL
          value: SASL_PLAINTEXT
        - name: MP_MESSAGING_CONNECTOR_SMALLRYE_KAFKA_SASL_MECHANISM
          value: SCRAM-SHA-512
        - name: MP_MESSAGING_CONNECTOR_SMALLRYE_KAFKA_SASL_JAAS_CONFIG
          valueFrom:
            secretKeyRef:
              name: worldmap-front
              key: sasl.jaas.config
        - name: MP_MESSAGING_INCOMING_SHIPMENTS_TOPIC
          value: headquarter-shipment-records
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        resources:
          limits:
            memory: 512Mi
            cpu: 1000m
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /q/health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 20
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
